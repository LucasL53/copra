name: proverbot_hard
num_files: 9
few_shot_data_path_for_retrieval: .log/tools/coq_raw_proofs/data/benchmarks/CompCert/2023-09-06-03-44-06/CompCert/train
few_shot_metadata_filename_for_retrieval: single.meta.json
dfs_data_path_for_retrieval: .log/run_data_generation_transforms/data/benchmarks/CompCert/train
dfs_metadata_filename_for_retrieval: local.meta.json
datasets:
  - project: data/benchmarks/CompCert
    files:
      - path: flocq/Calc/Round.v
        theorems: 
          - inbetween_int_NE
      - path: flocq/Core/Zaux.v
        theorems: 
          - Zopp_le_cancel
          - Zgt_not_eq
          - radix_gt_0
          - Zsame_sign_imp
          - cond_Zopp_negb
          - abs_cond_Zopp
          - cond_Zopp_Zlt_bool
          - iter_nat_S
      - path: common/Globalenvs.v
        theorems: 
        - shift_symbol_address
        - shift_symbol_address_32
        - shift_symbol_address_64
        - find_funct_find_funct_ptr
        - find_funct_ptr_iff
        - find_var_info_iff
        - global_addresses_distinct
        - genv_next_add_globals
        - genv_public_add_globals
        - alloc_globals_app
      #     # The ones below were not successfully proved by proverbot
      #     # - add_global_match
      #     # - add_globals_app
      #     # - add_globals_ensures
      #     # - add_globals_match
      #     # - add_globals_norepet_ensures
      #     # - add_globals_preserves
      #     # - add_globals_unique_ensures
      #     # - add_globals_unique_preserves
      #     # - advance_next_le
      #     # - alloc_global_exists
      #     # - alloc_global_initialized
      #     # - alloc_global_neutral
      #     # - alloc_global_nextblock
      #     # - alloc_global_perm
      #     # - alloc_global_unchanged
      #     # - alloc_globals_initialized
      #     # - alloc_globals_match
      #     # - alloc_globals_neutral
      #     # - alloc_globals_nextblock
      #     # - alloc_globals_perm
      #     # - alloc_globals_unchanged
      #     # - block_is_volatile_below
      #     # - find_def_inversion
      #     # - find_def_match
      #     # - find_def_not_fresh
      #     # - find_def_symbol
      #     # - find_funct_inv
      #     # - find_funct_inversion
      #     # - find_funct_match
      #     # - find_funct_prop
      #     # - find_funct_ptr_inversion
      #     # - find_funct_ptr_match
      #     # - find_funct_ptr_not_fresh
      #     # - find_funct_ptr_prop
      #     # - find_funct_ptr_transf
      #     # - find_funct_ptr_transf_partial
      #     # - find_funct_transf
      #     # - find_funct_transf_partial
      #     # - find_invert_symbol
      #     # - find_symbol_exists
      #     # - find_symbol_inversion
      #     # - find_symbol_match
      #     # - find_symbol_not_fresh
      #     # - find_symbol_transf
      #     # - find_symbol_transf_partial
      #     # - find_var_info_match
      #     # - find_var_info_not_fresh
      #     # - globalenv_public
      #     # - globalenvs_match
      #     # - in_norepet_unique
      #     # - init_mem_characterization
      #     # - init_mem_characterization_2
      #     # - init_mem_characterization_gen
      #     # - init_mem_exists
      #     # - init_mem_genv_next
      #     # - init_mem_inversion
      #     # - init_mem_match
      #     # - init_mem_transf
      #     # - init_mem_transf_partial
      #     # - initmem_inject
      #     # - invert_find_symbol
      #     # - load_store_init_data_invariant
      #     # - read_as_zero_unchanged
      #     # - senv_match
      #     # - senv_transf
      #     # - senv_transf_partial
      #     # - store_init_data_aligned
      #     # - store_init_data_exists
      #     # - store_init_data_list_aligned
      #     # - store_init_data_list_charact
      #     # - store_init_data_list_exists
      #     # - store_init_data_list_free_idents
      #     # - store_init_data_list_loadbytes
      #     # - store_init_data_list_match
      #     # - store_init_data_list_neutral
      #     # - store_init_data_list_nextblock
      #     # - store_init_data_list_perm
      #     # - store_init_data_list_unchanged
      #     # - store_init_data_loadbytes
      #     # - store_init_data_neutral
      #     # - store_init_data_perm
      #     # - store_init_data_unchanged
      #     # - store_zeros
      #     # - store_zeros_exists
      #     # - store_zeros_loadbytes
      #     # - store_zeros_neutral
      #     # - store_zeros_nextblock
      #     # - store_zeros_perm
      #     # - store_zeros_read_as_zero
      #     # - store_zeros_unchanged
# Below are the theorems that were successfully proved by proverbot
# We will include them in the benchmark for the next round
    # - path: lib/Parmov.v
    #   theorems: 
    #     - update_same
    #     - update_o
    #     - update_ident
    #     - dests_disjoint_sym
    #     - dests_disjoint_cons_right
    #     - is_mill_cons
    #     - move_no_temp_append
    #     - notin_dests_cons
    #     - exec_seq_app
    #     - env_equiv_sym
    #     - env_equiv_trans
    #     - parmove2_wf_moves
    #     - no_overlap_sym
    #     - pairwise_disjoint_norepet
    #     - disjoint_temps_not_temp
    #     - mu_is_mill
    #     - no_overlap_pairwise
    #     - weak_exec_seq_match
    # - path: x86/SelectOpproof.v
    #   theorems:
    #     - eval_addrstack
    #     - eval_mulhs
    #     - eval_mulhu
    #     - eval_negf
    #     - eval_absf
    #     - eval_negfs
    #     - eval_absfs
    #     - eval_compf
    #     - eval_compfs
    #     - eval_singleoffloat
    #     - eval_floatofsingle
    #     - eval_intoffloat
    #     - eval_intofsingle
    #   - path: backend/Locations.v
    #     theorems:
    #       - typesize_pos
    #       - typealign_pos
    #       - typealign_typesize
    #       - same_not_diff
    #       - Loc.diff_sym
    #       - Loc.disjoint_cons_left
    #       - IndexedTyp.index_inj
    #       - IndexedSlot.index_inj
    #       - OrderedLoc.eq_sym
    #       - OrderedLoc.eq_trans
    #       - OrderedLoc.lt_trans
    #   - path: cfrontend/Cop.v
    #     theorems: 
    #       - ArithConv.typeconv_integer_promotion